
# -*- coding:utf8 -*-

# 写个小脚本就搞定了！
import re

import pymysql

import time
from selenium import webdriver
from lxml import etree
import datetime


#请求

def get_first_page(url):
    driver.get(url)
    html = driver.page_source
    # time.sleep(3)
    return html


# 把首页和翻页处理？

def removeStall(i_list):
    f_list = []

    for item in i_list:
        f_i = "".join(item.split(","))
        f_list.append(f_i[:-1])
    return f_list



def insertDB(content):
    connection = pymysql.connect(host='127.0.0.1', port=3306, user='root', password='123456', db='a_stock',
                                 charset='utf8mb4', cursorclass=pymysql.cursors.DictCursor)
    cursor = connection.cursor()
    try:
        cursor.executemany('insert into as_fvalue_type (code,fl_value,type) values (%s,%s,%s)', content)
        connection.commit()
        connection.close()
        print('向MySQL中添加数据成功！')
    except StopIteration :
        pass







if __name__ == '__main__':
    options = webdriver.ChromeOptions()
    options.add_argument("--no-sandbox")
    driver = webdriver.Chrome("/usr/bin/chromedriver", chrome_options=options)

    connection = pymysql.connect(host='127.0.0.1', port=3306, user='root', password='123456', db='a_stock',
                                 charset='utf8mb4', cursorclass=pymysql.cursors.DictCursor)
    cur = connection.cursor()
    # sql 语句
    hs300_code = ["000415", "601216", "601877", "002241", "600489", "000963", "600867", "601360", "002958", "600221",
                  "002460", "000423", "600733", "002050", "002027", "601899", "601162", "002032", "603160", "600297",
                  "000100", "600522", "600547", "603260", "601212", "000656", "002142", "601009", "002594", "600027",
                  "000413", "000725", "600036", "600498", "000001", "603799", "600928", "002466", "601336", "002493",
                  "000895", "600023", "000627", "000069", "601766", "002311", "600519", "600000", "601166", "601138",
                  "600487", "601939", "601601", "601988", "601225", "600011", "600926", "000166", "600233", "600016",
                  "601169", "601998", "600299", "000333", "600188", "002024", "600061", "601628", "600848", "603993",
                  "601818", "601577", "601328", "601288", "600977", "600919", "600816", "600703", "600016", "300024",
                  "000703", "000166", "601066", "600900", "000776", "601997", "002271", "600004", "601318", "600015",
                  "600837", "601788", "002736", "601398", "601881", "601108", "600276", "300408", "600018", "601211",
                  "601211", "300017", "600705", "601898", "000063", "300144", "000858", "600177", "000723", "600837",
                  "603288", "002939", "002010", "002294", "601229", "000728", "600655", "601838", "601618", "002508",
                  "600570", "000898", "601555", "600535", "600019", "600176", "002945", "001979", "600028", "601985",
                  "002739", "601377", "600705", "600795", "600390", "600030", "601901", "600309", "601155", "600352",
                  "601668", "601688", "600019", "600085", "300498", "600958", "600030", "600208", "600398", "600369",
                  "601857", "601828", "601618", "600809", "600029", "600068", "600089", "600104", "600999", "601021",
                  "601669", "601727", "600968", "601021", "600271", "601006", "601018", "002001", "600362", "600153",
                  "600170", "600115", "600999", "000709", "002081", "600637", "601800", "600109", "600332", "000338",
                  "601088", "000630", "600153", "601186", "002411", "600109", "601633", "002673", "002841", "600690",
                  "601800", "600741", "600887", "002230", "600438", "601111", "601989", "603259", "601878", "601992",
                  "600406", "600438", "002916", "600674", "002415", "002422", "002456", "002624", "002236", "002153",
                  "002558", "601298", "601390", "000538", "600111", "300003", "000157", "300070", "002007", "600482",
                  "601198", "002044", "600663", "300124", "000651", "000568", "002146", "300070", "000630", "000157",
                  "002202", "300033", "600606", "300059", "002601", "601012", "600585", "600340", "002475", "600009",
                  "002044", "600009", "002410", "300413", "601238", "600010", "300433", "600340", "000671", "300015",
                  "300347", "601808", "000002", "000629", "002252", "000425", "601888", "002773", "600998", "002352",
                  "000661", "300136", "002304", "600346", "600989", "002602", "603986", "603833", "600893", "600100",
                  "002607", "000938", "002008", "002179", "600583", "000625", "600372", "603899", "000876", "600031",
                  "600031", "600436", "600516", "600066", "002120", "000768", "002714", "300142", "600038", "600183",
                  "002555", "603019", "002938", "601698", "601933", "600118", "300122", "600760", "600588", "603501"]

    for Num in hs300_code:

        url = 'http://data.eastmoney.com/stockdata/'+str(Num)+'.html'

        html = get_first_page(url)
        f_l =[]
        f_l.append(Num)
        selector = etree.HTML(html)
        floatValue = selector.xpath('//*[@id="gt6"]/text()')
        Rf_value = removeStall(floatValue)
        type = selector.xpath('//*[@id="bk1"]/text()')
        big_list = f_l + Rf_value + type
        try:
            if len(big_list) == 3:

                ff_l = []
                ff_l.append(tuple(big_list))
                insertDB(ff_l)
                print(ff_l)
            else:
                print("no type~~~")
        except:
            pass






# 字段设置了唯一性 unique
# code,fl_value,type
# create table as_fvalue_type(
# id int not null primary key auto_increment,
# code varchar(10),
# fl_value varchar(20),
# type varchar(20)
# ) engine=InnoDB  charset=utf8;


# drop table as_fvalue_type;

